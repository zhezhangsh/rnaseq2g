runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(awsomics)
require(awsomics);
awsomics::GetColorTypes()
awsomics::GetColorPanelTypes()
awsomics::GetColors(10, 'rainbow')
awsomics::GetColors(10, 'rainbow')
runApp()
runApp()
awsomics::GetColors(10, 'rainbow')
runApp()
runApp()
runApp()
runApp()
dir()
dir()
dir9)
dir()
runApp()
runApp()
dir9)
dir()
readRDS('c.rds')
readRDS('c.rds')
readRDS('c.rds')
?list
list(1:2, all.names=T)
list(1:2, all.names=c('a', 'b'))
as.list(1:2, all.names=c('a', 'b'))
as.list(1:2, all.names=TRUE
)
runApp()
?GetColorTypes
args(GetColorTypes)
runApp()
ct <- 1:length(GetColorTypes());
names(ct) <- GetColorTypes();
ct
ct <- as.list(1:length(GetColorTypes()));
names(ct) <- GetColorTypes();
ct
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dim(d)
head(d)
d <- readRDS('b.rds')
head(d)
saveRDS(d, 'example.rds')
runApp()
dir()
getwd()
runApp()
runApp()
runApp()
dim(d)
head(d)
data.frame(ID=rownames(d), d)->d
head(d)
write.table(d, 'example.txt', sep='\t', qu=F, row.names = FALSE)
runApp()
runApp()
setwd("/srv/shiny-server/scatter_viewer")
q()
s
q()
source('source/rnaseq2g.retrieve.result.r')
x <- rnaseq2g.retrieve.result.r('../rnaseq_2g/log/00/ex/')
x <- rnaseq2g.retrieve.result('../rnaseq_2g/log/00/ex/')
length(x)
names(x)
x <- x[[3]]
names(x)
x <- x[[2]]
names(x)
p <- sapply(x, function(x) x[, 5])
dim(p)
setwd("/srv/shiny-server/rnaseq_2g_dev")
saveRDS(p, 'p.rds')
devtools::install_github('zhezhangsh/DEGandMore')
library(DEGandMore)
args(CombinePvalue)
dir()
setwd("/srv/shiny-server/rnaseq_2g_dev")
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?checkboxInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
res <- rnaseq2g.retrieve.result('log/00/ex1')
names(res)
res <- res[[3]]
names(res)
x <- res[[2]]
names(x)
y <- res[[1]]
names(y)
y[[4]]
setdiff(y[[4]], names(x))
setdiff(y[[4]], names(x)) -> de
ct <- y[[2]]
head(ct)
dim(ct)
names(y)
grp <- y$groups
grp
res <- list()
tm <- list()
de
args(DeRNAseq)
for (i in 1:3) tm[[i]] <- system.time(res[[i]] <- DeRNAseq(ct, grp, mthds=de[i], force.norm = TRUE))
length(res)
names(res[[1]])
stat <- lapply(res, function(x) x[[2]][[1]])
dim(stat[[1]])
p <- sapply(stat, function(s) s[, 5])
dim(p)
hist(p[, 1], br=100)
hist(p[, 2], br=100)
hist(p[, 3], br=100)
setwd('log/00')
dir()
set('ex1')
dir()
setwd('ex1')
dir()
a <- readRDS('DeAbsSeq.rds')
dim(a)
fn <- paste(de, '.rds', sep='')
fn
for (i in 1:3) saveRDS(stat[[i]], fn[i])
for (i in 1:3) saveRDS(stat[[i]], fn[i])
s <- rnaseq2g.retrieve.result('')
length(s[[1]])
dir()
ln <- readRDS('status.txt')
ln
ln <- readLines('status.txt')
ln
sub('\t0', '\t1')
ln
sub('\t0', '\t1', ln)
sub('\t0', '\t1', ln)->ln
writeLines(ln, 'status.txt')
tm
q()
plotly_empty(type='bar')
require(plotly);
plotly_empty(type='bar');
} else plotly_empty();
plotly_empty();
names(res)
dir()
source('source/rnaseq2g.retrieve.result.r')
res <- rnaseq2g.retrieve.result('log/00/ex/')
gid <- rownames(res[[1]][[1]])[1:100]
typ <- 1
grp <- res$input$groups;
if (typ == '1') d <- res$input$original else if (typ == '2') d <- res$input$normalized$count else d <- res$input$normalized$logged;
x1 <- d[gid, grp[[1]]];
x2 <- d[gid, grp[[2]]];
x1 <- x1[!is.na(x1)];
x2 <- x2[!is.na(x2)];
if (length(c(x1, x2)) <= 6) sp <- 1/2 else if (length(c(x1, x2)) <= 12) sp <- 1/3 else sp <- 1/4;
mn <- min(c(x1, x2));
x1
x2
gid
rownames(res[[1]][[1]])
names(res)
rownames(res[[3[[1]][[1]])[100]
rownames(res[[3]][[1]][[1]])[100]
rownames(res[[3]][[1]][[1]])[100]->gid
grp <- res$input$groups;
if (typ == '1') d <- res$input$original else if (typ == '2') d <- res$input$normalized$count else d <- res$input$normalized$logged;
x1 <- d[gid, grp[[1]]];
x2 <- d[gid, grp[[2]]];
x1 <- x1[!is.na(x1)];
x2 <- x2[!is.na(x2)];
if (length(c(x1, x2)) <= 6) sp <- 1/2 else if (length(c(x1, x2)) <= 12) sp <- 1/3 else sp <- 1/4;
mn <- min(c(x1, x2));
gid
res <- res[[3]]
grp <- res$input$groups;
if (typ == '1') d <- res$input$original else if (typ == '2') d <- res$input$normalized$count else d <- res$input$normalized$logged;
x1 <- d[gid, grp[[1]]];
x2 <- d[gid, grp[[2]]];
x1 <- x1[!is.na(x1)];
x2 <- x2[!is.na(x2)];
if (length(c(x1, x2)) <= 6) sp <- 1/2 else if (length(c(x1, x2)) <= 12) sp <- 1/3 else sp <- 1/4;
mn <- min(c(x1, x2));
gid
x1
x2
y <- c(x1, x2);
x <- names(y);
d <- data.frame(x, y)
p <- plot_ly(d, x = ~x, y = ~y, type = 'bar',
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
p;
d <- data.frame(x, y);
c <- rep(c('rgb(158,202,225)', 'rgb(202,158,225)'), c(length(x1), length(x2)));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""));
x <- paste(names(y), names(y), names(y));
d <- data.frame(x, y);
c <- rep(c('rgb(158,202,225)', 'rgb(202,158,225)'), c(length(x1), length(x2)));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=50, r=50, b=100, t=100))
d <- data.frame(x, y);
c <- rep(c('rgb(158,202,225)', 'rgb(202,158,225)'), c(length(x1), length(x2)));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c
length(c)
x
y
length(x)
length(y)
y <- c(x1, x2);
x <- names(y);
d <- data.frame(x, y);
c <- rep(c('rgb(158,202,225)', 'rgb(202,158,225)'), c(length(x1), length(x2)));
c
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = ~ c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
plot_ly(d, x = ~x, y = ~y, type = 'bar', color = ~ c, marker = list(line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
d <- data.frame(x, y, c);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = ~c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c
x
y
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = ~c, line = list(color = 'rgb(8,48,107)', width = 1.5)))
c <- rep(c('rgb(158,202,225)', 'rgb(202,158,225)'), c(length(x1), length(x2)));
d <- data.frame(x, y);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = rep(c('rgb(158,202,225)', 'rgb(202,158,225)'), c(length(x1), length(x2))), line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
y
y <- as.vector(y)
y
d <- data.frame(x, y);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
y <- y+10
d <- data.frame(x, y);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
x
y
c
c <- rep(c('rgb(158,202,225,1)', 'rgb(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x, y);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c
x <- c('Feature A', 'Feature B', 'Feature C', 'Feature D', 'Feature E')
y <- c(20, 14, 23, 25, 22)
data <- data.frame(x, y)
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar',
marker = list(color = c('rgba(204,204,204,1)', 'rgba(222,45,38,0.8)',
'rgba(204,204,204,1)', 'rgba(204,204,204,1)',
'rgba(204,204,204,1)')))
p
y <- c(x1, x2);
x <- names(y);
c <- rep(c('rgb(158,202,225,1)', 'rgb(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x, y);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c))
y
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
c
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
names(c) <- x;
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
y <- c(x1, x2) + 10;
x <- names(y);
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
names(c) <- x;
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(5, 7));
names(c) <- x;
d <- data.frame(x, as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
d
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(5, 7));
names(c) <- x;
d <- data.frame(x=x, y=as.vector(y));
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
x
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(5, 7));
names(x) <- c;
plot_ly(x = x, y = y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
plot_ly(x = x, y = y, type = 'bar', color = ~c, marker = list(line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
plot_ly(d, x = ~x, y = ~y, type = 'bar', color = ~c, marker = list(line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
x
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(5, 7));
d <- data.frame(x=x, y=as.vector(y));
plot_ly(x = x, y = y, type = 'bar', color = ~c, marker = list(line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=100))
?plot_ly
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
plot_ly(x = x, y = y, type = 'bar', marker = list(color = 3, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25))
y <- c(x1, x2);
x <- names(y);
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
plot_ly(x = x, y = y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25))
y <- c(x1, x2);
x <- names(y);
names(x) <- 1:length(x);
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
plot_ly(x = x, y = y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25))
x
y <- c(x1, x2);
x <- names(y);
names(x) <- 1:length(x);
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
plot_ly(x = x, y = y, type = 'bar', names=1:length(x), marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25))
y <- c(x1, x2);
x <- names(y);
names(x) <- 1:length(x);
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25))
y <- c(x1, x2);
x <- names(y);
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]])
d
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25))
d$x <- factor(d$x, levels = d[["x"]])
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE)))
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]])
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=100, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
mn <- min(c(x1, x2));
y <- c(x1, x2);
x <- names(y);
b <- min(max(32, max(nchar(x))*8), 128); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=nc, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
y <- c(x1, x2);
x <- names(y);
b <- min(max(32, max(nchar(x))*8), 128); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=b, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
y <- c(x1, x2);
x <- names(y);
x <- paste(x, x, x);
b <- min(max(32, max(nchar(x))*8), 128); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=b, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
y <- c(x1, x2);
x <- names(y);
x <- paste(x, x, x);
b <- min(max(32, max(nchar(x))*4), 128); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=b, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
b <- min(max(36, max(nchar(x))*6), 144); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=20, r=10, b=b, t=25),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
b <- min(max(36, max(nchar(x))*6), 144); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=24, r=24, b=b, t=36),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
y <- c(x1, x2);
x <- names(y);
x <- paste(x, x, x, x, x);
b <- min(max(36, max(nchar(x))*6), 144); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=24, r=24, b=b, t=36),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
runApp()
shiny::runApp()
shiny::runApp()
plot_ly(d, x = ~x, y = ~y, type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=24, r=24, b=b, t=36),
annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = TRUE));
shiny::runApp()
plot_ly(d, x = ~x, y = ~y, text = ~z,  type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=24, r=24, b=b, t=36));
# annotations = list(x = x, y = y, text = y, xanchor = 'center', yanchor = 'bottom', showarrow = FALSE));
b <- min(max(36, max(nchar(x))*6), 144); # bottome margin size
c <- rep(c('rgba(158,202,225,1)', 'rgba(202,158,225,1)'), c(length(x1), length(x2)));
d <- data.frame(x=x, y=as.vector(y), z=paste(x, y, sep='; '), stringsAsFactors = FALSE);
d$x <- factor(d$x, levels = d[["x"]]);
plot_ly(d, x = ~x, y = ~y, text = ~z,  type = 'bar', marker = list(color = c, line = list(color = 'rgba(8,48,107,1)', width = 1.5))) %>%
layout(title = gid, xaxis = list(title = ""), yaxis = list(title = ""),  margin = list(l=24, r=24, b=b, t=36));
shiny::runApp()
y
d[, 3]
setwd("/srv/shiny-server/scatter_viewer/data")
setwd("/srv/shiny-server/scatter_viewer")
runApp()
?tryCatch
runApp()
session.data <- reactiveValues(data=NULL, metadata=NULL);
runApp()
install.packages('pca')
runApp()
runApp()
runApp()
runApp()
q()
